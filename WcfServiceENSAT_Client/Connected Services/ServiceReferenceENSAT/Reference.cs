//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdus si
//     le code est regénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceENSAT
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceENSAT")]
    public partial class Student : object
    {
        
        private string FNAMEField;
        
        private int IDField;
        
        private string LNAMEField;
        
        private string MAILField;
        
        private string PHONEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FNAME
        {
            get
            {
                return this.FNAMEField;
            }
            set
            {
                this.FNAMEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LNAME
        {
            get
            {
                return this.LNAMEField;
            }
            set
            {
                this.LNAMEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAIL
        {
            get
            {
                return this.MAILField;
            }
            set
            {
                this.MAILField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PHONE
        {
            get
            {
                return this.PHONEField;
            }
            set
            {
                this.PHONEField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceENSAT.IServiceENSAT")]
    public interface IServiceENSAT
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/getStudent", ReplyAction="http://tempuri.org/IServiceENSAT/getStudentResponse")]
        ServiceReferenceENSAT.Student getStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/getStudent", ReplyAction="http://tempuri.org/IServiceENSAT/getStudentResponse")]
        System.Threading.Tasks.Task<ServiceReferenceENSAT.Student> getStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/addStudent", ReplyAction="http://tempuri.org/IServiceENSAT/addStudentResponse")]
        void addStudent(ServiceReferenceENSAT.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/addStudent", ReplyAction="http://tempuri.org/IServiceENSAT/addStudentResponse")]
        System.Threading.Tasks.Task addStudentAsync(ServiceReferenceENSAT.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/deleteStudent", ReplyAction="http://tempuri.org/IServiceENSAT/deleteStudentResponse")]
        void deleteStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/deleteStudent", ReplyAction="http://tempuri.org/IServiceENSAT/deleteStudentResponse")]
        System.Threading.Tasks.Task deleteStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/updateStudent", ReplyAction="http://tempuri.org/IServiceENSAT/updateStudentResponse")]
        void updateStudent(ServiceReferenceENSAT.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/updateStudent", ReplyAction="http://tempuri.org/IServiceENSAT/updateStudentResponse")]
        System.Threading.Tasks.Task updateStudentAsync(ServiceReferenceENSAT.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/getAllStudents", ReplyAction="http://tempuri.org/IServiceENSAT/getAllStudentsResponse")]
        ServiceReferenceENSAT.Student[] getAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceENSAT/getAllStudents", ReplyAction="http://tempuri.org/IServiceENSAT/getAllStudentsResponse")]
        System.Threading.Tasks.Task<ServiceReferenceENSAT.Student[]> getAllStudentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IServiceENSATChannel : ServiceReferenceENSAT.IServiceENSAT, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class ServiceENSATClient : System.ServiceModel.ClientBase<ServiceReferenceENSAT.IServiceENSAT>, ServiceReferenceENSAT.IServiceENSAT
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceENSATClient() : 
                base(ServiceENSATClient.GetDefaultBinding(), ServiceENSATClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceENSAT.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceENSATClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceENSATClient.GetBindingForEndpoint(endpointConfiguration), ServiceENSATClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceENSATClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceENSATClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceENSATClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceENSATClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceENSATClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ServiceReferenceENSAT.Student getStudent(int id)
        {
            return base.Channel.getStudent(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceENSAT.Student> getStudentAsync(int id)
        {
            return base.Channel.getStudentAsync(id);
        }
        
        public void addStudent(ServiceReferenceENSAT.Student s)
        {
            base.Channel.addStudent(s);
        }
        
        public System.Threading.Tasks.Task addStudentAsync(ServiceReferenceENSAT.Student s)
        {
            return base.Channel.addStudentAsync(s);
        }
        
        public void deleteStudent(int id)
        {
            base.Channel.deleteStudent(id);
        }
        
        public System.Threading.Tasks.Task deleteStudentAsync(int id)
        {
            return base.Channel.deleteStudentAsync(id);
        }
        
        public void updateStudent(ServiceReferenceENSAT.Student s)
        {
            base.Channel.updateStudent(s);
        }
        
        public System.Threading.Tasks.Task updateStudentAsync(ServiceReferenceENSAT.Student s)
        {
            return base.Channel.updateStudentAsync(s);
        }
        
        public ServiceReferenceENSAT.Student[] getAllStudents()
        {
            return base.Channel.getAllStudents();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceENSAT.Student[]> getAllStudentsAsync()
        {
            return base.Channel.getAllStudentsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceENSAT))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceENSAT))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:60286/ServiceENSAT.svc");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceENSATClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceENSAT);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceENSATClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceENSAT);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceENSAT,
        }
    }
}
